This howto aims to show how to develop your own plugins for Proxystrike.

All the plugins must be in the "plugins" folder.
If you haven't got that folder, maybe your Proxystrike version is too old, so upgrade ;D.

In this folder you can find two examples: [http://proxystrike.googlecode.com/svn/trunk/plugins/demoplugin.readme demoplugin.readme] and [http://proxystrike.googlecode.com/svn/trunk/plugins/demoplugin2.readme demoplugin2.readme].

Below you can see the structure of Proxystrike plugin engine:

[http://4.bp.blogspot.com/_-xXcbzWG3ug/SfHvtf3_u4I/AAAAAAAAAHg/jovD7Ff-niw/s1600/struct.png]

Each request processed by the proxy is stored in a POOL and proccesed by every plugin 'enabled' in that very moment.

The requirements for develop a plugin are a few:
  * Inherit from *AttackPlugin*
  * Overload the *process* method
  * _optional_: Overload getHTML and getXML to export reults

Below I show a plugin example of an email collector plugin for Proxystrike:

{{{
class email_detect(AttackPlugin):
	def __init__(self):
		AttackPlugin.__init__(self,name="email detect",variableSet=False,iface=True,type="tree",fields=["Url","Email"])

		self.emailre=re.compile("[a-z0-9_.-]+@[a-z0-9_.-]+",re.I)

	def process(self,req):
		html=req.response.getContent()

		a=self.emailre.findall(html)

		results=[]

		for i in a:
			results.append([i])

		if a:   
			self.putRESULTS([req.completeUrl,results]) 
}}}

     

 